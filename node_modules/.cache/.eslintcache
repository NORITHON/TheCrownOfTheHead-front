[{"/Users/ian/Documents/GitHub/noriton-front/src/index.js":"1","/Users/ian/Documents/GitHub/noriton-front/src/components/App.js":"2","/Users/ian/Documents/GitHub/noriton-front/src/components/Footer.js":"3","/Users/ian/Documents/GitHub/noriton-front/src/components/Header.js":"4","/Users/ian/Documents/GitHub/noriton-front/src/routes/Home.js":"5","/Users/ian/Documents/GitHub/noriton-front/src/routes/Detail.js":"6","/Users/ian/Documents/GitHub/noriton-front/src/routes/Page404.js":"7","/Users/ian/Documents/GitHub/noriton-front/src/routes/Login.js":"8","/Users/ian/Documents/GitHub/noriton-front/src/routes/Manager.js":"9","/Users/ian/Documents/GitHub/noriton-front/src/routes/Designer.js":"10","/Users/ian/Documents/GitHub/noriton-front/src/routes/Like.js":"11","/Users/ian/Documents/GitHub/noriton-front/src/routes/DesignerUpload.js":"12","/Users/ian/Documents/GitHub/noriton-front/src/apis/apis.js":"13"},{"size":245,"mtime":1674719607290,"results":"14","hashOfConfig":"15"},{"size":1159,"mtime":1674806235281,"results":"16","hashOfConfig":"15"},{"size":1432,"mtime":1674745130641,"results":"17","hashOfConfig":"15"},{"size":3494,"mtime":1674808663602,"results":"18","hashOfConfig":"15"},{"size":5720,"mtime":1674839140057,"results":"19","hashOfConfig":"15"},{"size":15146,"mtime":1674830080535,"results":"20","hashOfConfig":"15"},{"size":178,"mtime":1674719686264,"results":"21","hashOfConfig":"15"},{"size":3940,"mtime":1674835169045,"results":"22","hashOfConfig":"15"},{"size":14367,"mtime":1674830080542,"results":"23","hashOfConfig":"15"},{"size":1605,"mtime":1674806463944,"results":"24","hashOfConfig":"15"},{"size":3462,"mtime":1674838500895,"results":"25","hashOfConfig":"15"},{"size":4563,"mtime":1674830732097,"results":"26","hashOfConfig":"15"},{"size":1465,"mtime":1674830080534,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"9gyzu8",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/ian/Documents/GitHub/noriton-front/src/index.js",[],[],[],"/Users/ian/Documents/GitHub/noriton-front/src/components/App.js",["72","73"],[],"/Users/ian/Documents/GitHub/noriton-front/src/components/Footer.js",[],[],"/Users/ian/Documents/GitHub/noriton-front/src/components/Header.js",["74","75"],[],"/Users/ian/Documents/GitHub/noriton-front/src/routes/Home.js",["76","77"],[],"/Users/ian/Documents/GitHub/noriton-front/src/routes/Detail.js",["78","79","80"],[],"import { Label } from \"@mui/icons-material\";\nimport { Button, Input, TextField, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport styled from \"@emotion/styled\";\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\nimport {createFund} from \"../apis/apis\";\nimport {client} from \"./Login\";\n\n\nconst StyledButton = styled(Button)({\n    color:'white', \n    width:'70px' ,\n    backgroundColor:\"green\" ,\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    height:\"30px\",\n    borderRadius:'0',\n    \n    '&:hover': {\n        opacity:'0.6',\n        backgroundColor:\"green\" ,\n    },\n})\n\n\nconst StyledTextField = styled(TextField)({\n    ' .MuiOutlinedInput-root': {\n        \n        '& fieldset': {\n            margin:'auto 0',\n            borderColor: 'lightGray',\n            height: '40px',\n          },\n          '&:hover fieldset': {\n          },\n          '&.Mui-focused fieldset': {\n            borderColor: 'gray',\n          },\n    },\n\n})\n\nconst InfoPartBox = styled(Box)({\n    gridArea : 'infoPart',\n    display:'flex' , \n    flexDirection:'column', \n    justifyContent:'space-between' ,\n    height:'100%'\n})\n\nconst InfoSecondBox = styled(Box)({\n    borderTop: \"1px solid\" , \n    borderBottom: \"1px solid\" , \n    paddingTop: \"20px\",\n    paddingBottom: \"20px\",\n    borderColor : 'lightGray'\n})\n\nconst InfoThirdBox = styled(Box)({\n    display:'flex' , \n    flexDirection:'column'\n})\n\nconst ImagePartBox = styled(Box)({\n    gridArea: 'imagePart', \n    border:0, \n    height:\"650px\"\n})\nconst OrderPartBox = styled(Box)({\n    gridArea: 'orderPart',\n    display:'flex' ,\n    flexDirection:'column',\n    justifyContent:'space-between' ,\n})\n\nconst OrderFirstBox = styled(Box)({\n    display:'flex' ,\n    flexDirection:'column',\n    // justifyContent:'space-between' ,\n})\n\nconst OrderSecondBox = styled(Box)({\n    display : 'flex' , \n    justifyContent:'space-between' , \n    alignItems:'center'\n})\n\nconst OrderThirdBox = styled(Box)({\n    display:'flex' , \n    justifyContent:'right'\n})\nconst OrderFourthBox = styled(Box)({\n    display:\"flex\" , \n    alignItems:'center' , \n    justifyContent:'space-between'\n})\nconst OrderFifthBox = styled(Box)({\n    display:\"flex\" , \n    alignItems:'center' , \n    justifyContent:'space-between'\n})\nconst OrderSixthBox = styled(Box)({\n    display : 'flex' ,\n    justifyContent:'space-between' , \n    alignItems:'center',\n    borderTop:\"1px solid\" , \n    borderColor:'lightgray' , \n    paddingTop:\"10px\",\n    marginTop:'30px'\n})\nconst OrderSeventhBox = styled(Box)({\n    borderTop:\"1px solid\" , \n    borderBottom:\"1px solid\" , \n    borderColor:'lightgray' , \n    marginTop:\"10px\",\n    marginBottom:\"20px\",\n    paddingBottom:'10px'\n})\n\nfunction Detail(){\n\n    const completePercent = 50;\n    \n    const [totalCost , setTotalCost] = useState(0);\n\n    const shippingFee = 10000;\n\n    const location = useLocation();\n\n    const [num , setNum] = useState(0);\n    const onClick = (e) =>{\n        if(e.target.id === '-'){\n            setNum(prev => prev-1);\n        }\n        else if(e.target.id === '+'){\n            setNum(prev => prev+1);\n        }\n    }\n\n    const clothes = {\n        id : location.state?.id,\n        name : location.state?.name,\n        price : location.state?.price,\n        image : location.state?.image,\n        content : location.state?.content,\n    }\n\n    useEffect( () => {\n        if(num <= 0 ) setTotalCost(0);\n        else setTotalCost( num * parseInt(clothes.price));\n    } , [num])\n\n    useEffect( () => {\n        window.scrollTo(0, 0);\n    } , [])\n\n\n\n    const [address1 , setAddress1] = useState(\"\");\n    const [address2 , setAddress2] = useState(\"\");\n    const [address3 , setAddress3] = useState(\"\");\n\n    const [phone1 , setPhone1] = useState(\"\");\n    const [phone2 , setPhone2] = useState(\"\");\n    const [phone3 , setPhone3] = useState(\"\");\n\n    const onChangeCollection = (e) => {\n        const { target : { value }} = e;\n        const { target : { id }} = e;\n\n        if(id === \"address1\"){\n            setAddress1(value);\n        }else if(id===\"address2\"){\n            setAddress2(value);\n        }else if(id===\"address3\"){\n            setAddress3(value);\n        }else if(id ===\"phone1\"){\n            setPhone1(value);\n        }else if(id ===\"phone2\"){\n            setPhone2(value);\n        }else if(id ===\"phone3\"){\n            setPhone3(value);\n        }\n    }\n\n    const onClickFund = async () =>{\n        const data = {\n            address : address1 + address2 + address3,\n            size : \"M\",\n            count : num,\n            phoneNumber : phone1+ \"-\" +phone2 +\"-\" +phone3,\n            memberId : parseInt(client.id) ,\n            itemId : clothes.id\n        }\n\n        createFund(data);\n\n        setAddress1(\"\");\n        setAddress2(\"\");\n        setAddress3(\"\");\n        setPhone1(\"\");\n        setPhone2(\"\");\n        setPhone3(\"\");\n    }\n\n\n\n    return(\n        <Box>\n            <Box sx={{\n                marginY : \"100px\",\n                \n                display: \"grid\",\n                gap: \"2rem\",\n                width:\"90%\",\n                marginX: \"auto\",\n                gridTemplateAreas: `\"infoPart imagePart orderPart\"`,\n                gridTemplateColumns: \"280px 1fr 320px\"                 \n            }}>\n                    <InfoPartBox >\n                        <Box>\n                            <Typography variant=\"h5\">{clothes.name}</Typography>\n                            <Typography variant=\"h5\" sx={{fontWeight:'bold' , my:2}}>{clothes.price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}원</Typography>\n                        </Box>\n                        \n                        <InfoSecondBox>\n                            <Typography variant=\"body2\">{clothes.content}</Typography>\n                        </InfoSecondBox>\n\n                        <InfoThirdBox >\n                            <Box sx={{display :'flex'}}>\n                            <Typography variant=\"caption\" sx={{my:1.5 , mr:4}}>원산지 </Typography>\n                            <Typography variant=\"caption\" sx={{my:1.5}}>Mogolian</Typography>\n                            </Box>\n                            <Box sx={{display :'flex'}}>\n                            <Typography variant=\"caption\" sx={{mb:1.5 , mr:2.5}}>배송정보</Typography>\n                            <Typography variant=\"caption\" sx={{mb:1.5}}>택배 (해외배송)</Typography>\n                            </Box>\n                            <Box sx={{display:'flex'}}>\n                            <Typography variant=\"caption\" sx={{mb: 1.5,mr:4}}>배송비 </Typography>\n                            <Typography variant=\"caption\"> {shippingFee.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}원 (100,000원 이상 무료배송)</Typography>\n                            </Box>\n                        </InfoThirdBox>\n                        \n                            <Box sx={{borderTop:1 , borderBottom:1 , borderColor:'lightgray'}}>\n                                <Box sx={{display:'flex'}}>\n                                    <Typography variant=\"caption\" sx={{my:1 ,mr:5}}>리뷰</Typography>\n                                    <Typography variant=\"caption\"sx={{my:1}}>(17)</Typography>\n                                </Box>\n\n                                <Box sx={{display:'flex'}}>\n                                    <Typography variant=\"caption\" sx={{mb:2, mr:5}}>Q&A</Typography>\n                                    <Typography variant=\"caption\">(2)</Typography>\n                                </Box>\n                        </Box>\n                        <Box>\n                            <Box sx={{mt:5}}>\n                                <Box sx={{display : 'flex' , justifyContent:'space-between' , alignItems:'center'}}>\n                                <Typography variant=\"caption\">18일 남음</Typography>\n                                <Typography variant=\"h6\" sx={{color:'green'}}>{completePercent}%</Typography>\n                                </Box>\n                            </Box>\n                            <Box sx={{height:'5px', backgroundColor:'beige'}}>\n                                <Box sx={{width:`${completePercent}%` , backgroundColor:'green' , height:'100%'}}>&nbsp;</Box>\n                            </Box>\n                            <Box sx={{display:'flex' , justifyContent:'space-between' , mt:1}}>\n                                <Typography variant=\"caption\" sx={{color:'gray'}}>1,000,000원 목표</Typography>\n                                <Typography variant=\"body2\" sx={{color:'gray'}} >1,299,900원</Typography>\n                            </Box>\n                        </Box>\n\n                    </InfoPartBox>\n                    <ImagePartBox >\n                        <Box component=\"img\" src={clothes.image} width=\"100%\" height=\"100%\"></Box>\n                    </ImagePartBox>\n                    <OrderPartBox>\n                       \n                            \n                            <OrderFirstBox>\n                                <Box sx={{ display:'flex' , alignItems:'center'}}>\n                                <CalendarTodayIcon fontSize=\"small\" sx={{mb:0.3}} /><Typography variant=\"body1\" sx={{ml:1}}>\n                                    결제 및 발송 예정일\n                                    </Typography>\n                                </Box>\n                                <Typography variant=\"caption\" sx={{my:1, ml:2 , color:'gray'}}>100% 달성 시에만 아래 지정일에 결제됩니다.</Typography>\n                                <Typography variant=\"caption\" sx={{ml:0.5 }}>1차 결제일: 2023년 2월 3일, 예상 발송일: 2023년 2월 16일</Typography>\n                                <Typography variant=\"caption\" sx={{ml:0.5,mb:1 }}>2차 결제일: 2023년 2월 20일, 예상 발송일: 2023년 2월 28일</Typography>\n                                \n                            </OrderFirstBox>\n                            <OrderSecondBox>\n                                    <Typography variant=\"body2\">배송지 입력</Typography>\n                                    <Box sx={{display:'flex' , alignItems:'center'}}>\n                                        <StyledTextField id=\"address1\" value={address1} onChange={onChangeCollection} sx={{width : '120px' , mr:2}}></StyledTextField>\n                                        <Button sx={{backgroundColor:'lightGray', opacity:'0.8' , color:'black'}}>우편번호 검색</Button>\n                                    </Box>\n                            </OrderSecondBox>\n\n                            <OrderThirdBox > \n                                <StyledTextField id=\"address2\" value={address2} onChange={onChangeCollection} sx={{float:'right'}}/>\n                            </OrderThirdBox>\n\n                            <OrderFourthBox>\n                                <Typography variant=\"body2\">상세주소</Typography>\n                                <StyledTextField id=\"address3\" value={address3} onChange={onChangeCollection}/>\n                            </OrderFourthBox>\n\n                            <OrderFifthBox>\n                                <Typography variant=\"body2\">연락처</Typography>\n                                <Box>\n                                <StyledTextField id=\"phone1\" value={phone1} onChange={onChangeCollection} sx={{width:'60px' , mr:1}}/>\n                                <StyledTextField id=\"phone2\" value={phone2} onChange={onChangeCollection} sx={{width:'80px', mr:1}}/>\n                                <StyledTextField id=\"phone3\" value={phone3} onChange={onChangeCollection} sx={{width:'80px'}}/>\n                                </Box>\n                            </OrderFifthBox>\n\n                            <OrderSixthBox>\n                                <Typography variant=\"body2\">수량</Typography>\n                                <Box sx={{display : 'flex' , alignItems:'center'}}>\n                                    <Button onClick={onClick} id=\"-\" sx={{color:'black' }}><RemoveIcon sx={{fontSize:'15px'}}/></Button>\n                                    <Box >{num}</Box>\n                                    <Button onClick={onClick} id=\"+\" sx={{color:'black'}}><AddIcon sx={{fontSize:'15px'}}/></Button>\n                                </Box>\n                            </OrderSixthBox>\n\n                            <OrderSeventhBox>\n                                <Box sx={{display : 'flex' ,my: 2 , justifyContent:'space-between' }}>\n                                    <Typography variant=\"body2\">총 상품금액</Typography>\n                                    <Typography variant=\"body2\">{totalCost.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}원</Typography>\n                                </Box>\n\n                                <Box sx={{display : 'flex' ,my: 2 , justifyContent:'space-between' }}>\n                                    <Typography variant=\"body2\">배송비</Typography>\n                                    <Typography variant=\"body2\">{shippingFee.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}원</Typography>\n                                </Box>\n                                \n                                <Box sx={{display : 'flex' , justifyContent:'space-between' }}>\n                                    <Typography variant=\"body1\" sx={{fontWeight:'bold'}}>총 상품금액</Typography>\n                                    <Typography variant=\"body1\" sx={{fontWeight: 'bold'}}>{ (totalCost + shippingFee)===10000 ? 0 : (totalCost + shippingFee).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}원</Typography>\n                                </Box>\n\n                                \n                            </OrderSeventhBox>\n                            \n                            <Box>\n                                <Box sx={{display : 'flex', justifyContent:'space-between',alignItems:'center' , mt:2}}>\n                                    <Typography variant=\"body1\">결제방식</Typography>\n                                    <Box>\n                                        <Button sx={{backgroundColor:'white', opacity:'0.7' , color:'black', borderRadius:0 , border:1, height:\"30px\", width:'130px', borderColor:'lightgray'}}>장바구니 담기</Button>\n                                        <Button sx={{backgroundColor:'white', opacity:'0.7' , color:'black', borderRadius:0 , border:1 , height:\"30px\", width:'70px' ,borderColor:'lightgray'}}>구매하기</Button>   \n                                    </Box>\n                                </Box>\n\n                                <Box sx={{display:'flex' , justifyContent:'end'}}>\n                                    <StyledButton onClick={onClickFund}>펀딩하기</StyledButton>\n                                </Box>\n                            </Box>\n                        \n                    \n                    </OrderPartBox>\n            </Box>\n\n        </Box>\n    );\n}\n\nexport default Detail;",[],"/Users/ian/Documents/GitHub/noriton-front/src/routes/Page404.js",[],[],"/Users/ian/Documents/GitHub/noriton-front/src/routes/Login.js",["81"],[],"/Users/ian/Documents/GitHub/noriton-front/src/routes/Manager.js",["82","83","84"],[],"import { Button, Grid, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React, {useEffect, useRef, useState} from \"react\";\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport BuildIcon from '@mui/icons-material/Build';\nimport styled from \"styled-components\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport ArticleOutlinedIcon from '@mui/icons-material/ArticleOutlined';\nimport {createItem, getSamples} from \"../apis/apis\";\n\nconst StyledTextField = styled(TextField)({\n    ' .MuiOutlinedInput-root': {\n        '& fieldset': {\n            margin:'auto 0',\n            borderColor: 'lightGray',\n            height: '40px',\n          },\n          '&:hover fieldset': {\n          },\n          '&.Mui-focused fieldset': {\n            borderColor: 'gray',\n          },\n    },\n    \n})\n\nconst StyledButton = styled(Button)({\n    color:'white', \n    width:'70px' ,\n    backgroundColor:\"gray\" ,\n    marginBottom: \"30px\",\n    height:\"40px\",\n    \n    '&:hover': {\n        backgroundColor:\"gray\" ,\n    },\n})\n\nfunction Manager(){\n\n    const [isPopup , setIsPopup] = useState(false);\n\n    const [popup , setPopup] = useState([]);\n\n    const [samples , setSamples] = useState([]);\n    //     {\n    //     name : \"yellow muffler\",\n    //     image : \"img/sample1.png\",\n    //     content: \"This is very good!\"\n    // },\n    // {\n    //     name : \"white baraclaba\",\n    //     image : \"img/sample2.png\",\n    //     content: \"This is very good!\"\n    // },\n    //\n    // {\n    //     name : \"cashmere knit\",\n    //     image : \"img/sample3.png\",\n    //     content: \"This is very good!\"\n    // },\n    //\n    // {\n    //     name : \"shirt-sleeved T\",\n    //     image : \"img/sample4.png\",\n    //     content: \"This is very good!\"\n    // },\n    //\n    // {\n    //     name : \"short-sleeved T\",\n    //     image : \"img/sample4.png\",\n    //     content: \"This is very good!\"\n    // },\n    //\n    // {\n    //     name : \"short-sleeved T\",\n    //     image : \"img/sample4.png\",\n    //     content: \"This is very good!\"\n    // },\n    //\n// ]\n//     )\n\n\n    const [rows, setRows] = useState([{\n        order_id: \"1\",\n        order_date: \"Mon Dec 12\",\n        total_cost: 100200,\n        member_name: \"Ian1\", \n        state: \"배송중\",\n    },\n    {\n        order_id: \"2\",\n        order_date: \"Feb May 21\",\n        total_cost: 99800,\n        member_name: \"Ian2\", \n        state: \"취소요청\",\n    },\n    {\n        order_id: \"3\",\n        order_date: \"Wed Jul 21\",\n        total_cost: 399800,\n        member_name: \"Ian3\", \n        state: \"취소요청\",\n    },\n    {\n        order_id: \"4\",\n        order_date: \"Thu Dec 23\",\n        total_cost: 499800,\n        member_name: \"Ian4\", \n        state: \"교환요청\",\n    },\n    {\n        order_id: \"5\",\n        order_date: \"Thu Jan 27\",\n        total_cost: 9649800,\n        member_name: \"Ian5\", \n        state: \"배송중\",\n    },\n    {\n        order_id: \"6\",\n        order_date: \"Mon May 21\",\n        total_cost: 99800,\n        member_name: \"Ian6\", \n        state: \"교환요청\",\n    },\n    ])\n\n    const onClick = (e) =>{\n        if(e.target.id === \"modify\"){\n            window.confirm(\"수정하시겠습니까?\");\n        }\n        else if(e.target.id ===\"delete\"){\n            window.confirm(\"삭제하시겠습니까?\");\n        }\n        else if(e.target.id === \"승인\"){\n            window.confirm(\"승인하시겠습니까?\");\n        }\n        else if(e.target.id === \"미승인\"){\n            window.confirm(\"미승인하시겠습니까?\");\n        }\n    }\n\n    const scrollRef = useRef();\n\n    const onClickDetail = (sample) =>{\n        setPopup(sample);\n        setIsPopup(true);\n        setP1(sample.title);\n        window.scrollTo(0, 0);\n    }\n    const onClickClosePopup = () => {\n        setIsPopup(false);\n    }\n\n\n    const [popupName, setPopupName] = useState(\"\");\n\n    const [p1 , setP1] = useState(\"\");\n    const [p2 , setP2] = useState(\"\");\n    const [p3 , setP3] = useState(\"\");\n    const [p4, setP4] = useState(\"\");\n\n    const onchangep = (e) => {\n        if(e.target.id===\"p1\"){\n            setP1(e.target.value);\n        }else if(e.target.id===\"p2\"){\n            setP2(e.target.value);\n        }else if(e.target.id ===\"p3\"){\n            setP3(e.target.value);\n        }else if(e.target.id ===\"p4\"){\n            setP4(e.target.value);\n        }\n    }\n\n    const onMakeItem = async () => {\n        const data = {\n            name : p1,\n            laborCost : parseInt(p2),\n            materialCost : parseInt(p3),\n            circulationCost : 100,\n            sampleId : popup.id,\n            stockQuantity : parseInt(p4),\n        }\n        createItem(data);\n        setIsPopup(false);\n        setP1(\"\");\n        setP2(\"\");\n        setP3(\"\");\n        setP4(\"\");\n\n    }\n\n    useEffect( () => {\n        const getAllSample = async () =>{\n            const data = await getSamples();\n\n            setSamples(data);\n        }\n        getAllSample();\n    } , [samples])\n    \n\n    return(\n\n\n            <Box ref={scrollRef}>\n                \n        {isPopup ? <Box>\n            <Box sx={{display : 'flex' , pt:3, justifyContent:'center' , width:'100%' , height:'800px' , backgroundColor:'gray'}}>\n                <Paper sx={{width : \"50%\" , height:'85%' , borderRadius:'5%' , pl : 7 , pr:3 , pt:3}}>\n                    <Box sx={{display:'flex' , justifyContent:'right'}}>\n                        <CloseIcon onClick={onClickClosePopup} fontSize=\"large\"/>\n                    </Box>\n                    <Box sx={{display:'flex' , flexDirection:'column' , alignItems:'start'}}>\n                        <Typography variant=\"h4\">About {popup.title}</Typography>\n\n                        <Box sx={{display : 'flex' , width:'100%' ,height: \"250px\" ,borderBottom:2 , borderColor:'lightgray' , py:3 }}>\n                            <Box component=\"img\" src={popup.imageUrl} width=\"40%\" sx={{ mr:2}}></Box>\n                            <Box>\n                                <Box sx={{display:'flex' , alignItems:'center'}}>\n                                <ArticleOutlinedIcon sx={{mr:1}} />\n                                <Typography variant=\"h5\">Product Information</Typography>\n                                </Box>\n                                <Typography sx={{mt:2}}>{popup.content}</Typography>\n                            </Box>\n                        </Box>\n                        <Box sx={{display : 'flex' , justifyContent:'space-between' , alignItems:'center',width:'100%', pt:2 }}>\n                            <Typography variant=\"body1\">제품명</Typography>\n                            <StyledTextField id=\"p1\" value={p1} onChange={onchangep}/>\n                            {/* <Typography variant=\"body1\">{popup.rawMaterialCost.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}</Typography> */}\n                        </Box>\n\n                        <Box sx={{display : 'flex' , justifyContent:'space-between' , alignItems:'center',width:'100%' }}>\n                            <Typography variant=\"body1\">원자재 비용</Typography>\n                            <StyledTextField id=\"p2\" value={p2} onChange={onchangep} />\n                            {/* <Typography variant=\"body1\">{popup.rawMaterialCost.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}</Typography> */}\n                        </Box>\n\n                        <Box sx={{display : 'flex' , justifyContent:'space-between', width:'100%', alignItems:'center'}}>\n                            <Typography variant=\"body1\">공장 인건비</Typography>\n                            {/* <Typography variant=\"body1\"></Typography> */}\n                            <StyledTextField id=\"p3\" value={p3} onChange={onchangep}/>\n                        </Box>\n\n                        <Box sx={{display : 'flex' , justifyContent:'space-between', alignItems:'center', width:'100%' , pr:2}}>\n                            <Typography>공모 모집 인원</Typography>\n                            <StyledTextField id=\"p4\" value={p4} onChange={onchangep}/>\n                            {/* <Typography>{popup.distributionCost}</Typography> */}\n                        </Box>\n                        <Box sx={{display:'flex', justifyContent:'end' , width:'100%'}}>\n                            <StyledButton onClick={onMakeItem} sx={{backgroundColor:'gray' , color:'white', my:1}}>신청하기</StyledButton>\n                        </Box>\n                    </Box>\n                </Paper>\n            </Box>\n        </Box> :\n            <Box>\n            <Box sx={{\n            display: { md : \"flex\", sx: 'none'},\n            gap: \"1rem\",\n            width:\"90%\",\n            margin: \"100px auto\",\n            // gridTemplateAreas: {md :    `\"sidebar1 main1\"\n            //                             \"sidebar2 main2\"`,\n            //                     sm :    `\"sidebar1\"\n            //                             \"main1\"\n            //                             \"sidebar2\"\n            //                             \"main2\"`},\n            // gridTemplateColumns:`\"200px 5fr\"`,\n                                \n\n           }}>\n                <Box sx={{ gridArea: 'sidebar1' , border:0 , display:'flex' , alignItems:'start'}}>\n                    <Typography variant=\"h5\" sx={{ mr : 8 , mb:3}}>주문내역 확인</Typography>\n                    <ArrowForwardIosIcon sx={{ mr : 8}} fontSize=\"large\"/>\n                </Box>\n                <Box sx={{ gridArea: 'main1', border:0 ,height:\"300px\" , width:'70%' , minWidth:'550px'}}>\n                \n                <TableContainer component={Paper} elevation={5}>\n                    <Table sx={{}} size=\"small\" aria-label=\"a dense table\">\n                        <TableHead>\n                        <TableRow>\n                            <TableCell sx={{ backgroundColor:'lightgray' , border:0,borderRight:1 , borderColor:'darkGray', maxWidth:\"30%\"}}>주문번호</TableCell>\n                            <TableCell sx={{ backgroundColor:'lightgray' , border:0, borderRight:1 , borderColor:'darkGray', maxWidth:\"30%\"}}>주문일</TableCell>\n                            <TableCell align=\"center\">주문합계</TableCell>\n                            <TableCell align=\"center\">이름</TableCell>\n                            <TableCell align=\"center\">주문상태</TableCell>\n                            <TableCell align=\"center\">수정/삭제</TableCell>\n                        </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        {rows.map((row,index) => (\n                            <TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.order_id}\n                            </TableCell>\n                            <TableCell>{row.order_date}</TableCell>\n                            <TableCell align=\"center\">{row.total_cost}</TableCell>\n                            <TableCell align=\"center\">{row.member_name}</TableCell>\n                            <TableCell align=\"center\">{row.state}</TableCell>\n                            <TableCell align=\"center\"> \n                            <Box  sx={{display:'flex' , alignItems:'center' , justifyContent:'center' ,color:'gray'}}>\n                                <BuildIcon id=\"modify\" onClick={onClick} fontSize=\"small\"/> \n                                <DeleteIcon id=\"delete\" onClick={onClick} /> \n                            </Box>\n                            </TableCell>\n                            \n                            </TableRow>\n                        ))}\n                        </TableBody>\n                    </Table>\n                    </TableContainer>\n                </Box>\n                    \n                \n        </Box>\n        <Box sx={{\n             display: { md : \"flex\", sx: 'none'},\n             gap: \"1rem\",\n             width:\"90%\",\n             margin: \"100px auto\",\n        }}>\n            <Box sx={{ gridArea: 'sidebar2' , border:0 , display:'flex' , alignItems:'start'}}>\n                        <Typography variant=\"h5\" sx={{ mr : 2}}>디자이너 상품 승인</Typography>\n                        <ArrowForwardIosIcon fontSize=\"large\" sx={{ mr : 8}}/>\n            </Box>\n\n            <Box sx={{gridArea : 'main2' , border: 0 , width:'70%' , minWidth:'550px'}}>\n                <Box sx={{borderBottom:2 , borderColor:\"lightgray\" , pb:1 , mb:5}}>\n                    <Typography variant=\"body1\">상품명</Typography>\n                </Box>\n                \n                <Grid container sx={{justifyContent:'space-between'}}>\n                {samples.map( (sample, index) => (\n                        <Grid key={index} item md={3.5}  sx={{mb:5}}>\n                            <Box component=\"img\" src={sample.imageUrl} sx={{width:\"100%\" ,maxHeight:\"350px\"}}></Box>\n                            <Box sx={{display : 'flex' , justifyContent:\"space-between\" , alignItems:'center' , mt:1 , mb:0.5}}>\n                                <Typography variant=\"body1\">{sample.title}</Typography>\n                                <Box>\n                                <Button id=\"승인\" onClick={onClick} sx={{backgroundColor:'white', opacity:'0.7' , color:'black', borderRadius:0 , border:1 , height:\"25px\" ,borderColor:'lightgray'}}>승인</Button>   \n                                <Button id=\"미승인\" onClick={onClick} sx={{backgroundColor:'white', opacity:'0.7' , color:'black', borderRadius:0 , border:1 , height:\"25px\" ,borderColor:'lightgray'}}>미승인</Button>   \n                                </Box>\n                            </Box>\n                            <Box onClick={ () => onClickDetail(sample)} sx={{display : 'flex' , alignItems:'center'}}>\n                            <Typography variant=\"caption\" sx={{color:'gray'}}>상세보기 </Typography>\n                            <ArrowForwardIosIcon sx={{fontSize:'13px' , mb:0.3 , ml:1 , color:'gray'}}/>\n                            </Box>\n                        </Grid>\n                    ))}\n                    \n                </Grid>\n\n\n            </Box>\n    \n        </Box> \n        </Box>\n        }\n        \n        </Box>\n    );\n}\n\nexport default Manager;","/Users/ian/Documents/GitHub/noriton-front/src/routes/Designer.js",["85"],[],"/Users/ian/Documents/GitHub/noriton-front/src/routes/Like.js",["86","87","88"],[],"/Users/ian/Documents/GitHub/noriton-front/src/routes/DesignerUpload.js",["89","90"],[],"import { Button, Grid, TextField, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React, { useCallback, useRef, useState } from \"react\";\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport styled from \"styled-components\";\nimport FileUploadIcon from '@mui/icons-material/FileUpload';\nimport { designer } from './Login.js';\nimport {createSample} from \"../apis/apis\";\n\nconst StyledButton = styled(Button)({\n    color:'white', \n    width:'100px' ,\n    backgroundColor:\"gray\" ,\n    marginBottom: \"30px\",\n    height:\"30px\",\n    borderRadius:0,\n    \n    '&:hover': {\n        backgroundColor:\"gray\" ,\n    },\n});\n\nconst StyledTextField1 = styled(TextField)({\n    ' .MuiOutlinedInput-root': {\n        \n        '& fieldset': {\n            margin:'auto 0',\n            borderColor: 'lightGray',\n            height: '40px',\n          },\n          '&:hover fieldset': {\n          },\n          '&.Mui-focused fieldset': {\n            borderColor: 'gray',\n          },\n    },\n\n})\n\n\nconst StyledTextField2 = styled(TextField)({\n    ' .MuiOutlinedInput-root': {\n        '& fieldset': {\n            margin:'auto 0',\n            borderColor: 'lightGray',\n            height: '265px',\n          },\n          '&:hover fieldset': {\n          },\n          '&.Mui-focused fieldset': {\n            borderColor: 'gray',\n          },\n    },\n\n})\n\n\nfunction DesignerUpload(){\n\n    const [title , setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n\n    const onChange = (e) => {\n        if(e.target.id===\"title\"){\n            setTitle(e.target.value);\n        }else if(e.target.id ===\"content\"){\n            setContent(e.target.value);\n        }\n    }\n\n    const onSubmit = async () => {\n        const data ={\n            title : title,\n            imageUrl : \"img/sample1.png\",\n            content : content,\n            designerId : designer.id\n        }\n\n        createSample(data);\n\n        setTitle(\"\");\n        setContent(\"\");\n\n    }\n\n\n\n// 수정\n\nconst [leftImage, setLeftImage] = useState(\"\");\n\nconst inputRef = useRef(null);\n    \n    const onUploadImage = useCallback((e) => {\n      if (!e.target.files) {\n        return;\n      }\n      setLeftImage( \"img/\"+e.target.files[0].name);\n    }, []);\n\n    \n    const onUploadImageButtonClick = useCallback(() => {\n      if (!inputRef.current) {\n        return;\n      }\n      inputRef.current.click();\n    }, []);\n\n\n\n///////////////////////////////////////\n\n    return(\n        <Box>\n            <Box sx={{display:'flex' , alignItems:'center', justifyContent:'center' , mt:10 , width:'70%', marginX:'auto' , borderBottom:3 , borderColor:'lightgray' , pb:2 , mb:13}}>\n                <Typography sx={{ color: 'gray'}}>상품 카테고리 선택</Typography>\n                <ArrowForwardIosIcon fontSize=\"small\" sx={{mx:4 , color:'gray'}}/>\n                <Typography>상품 디자인 업로드</Typography>\n            </Box>\n            <Box sx={{width:'70%' , marginX:'auto' , display:'flex'}}>\n\n                    <Box component=\"img\" src={leftImage} sx={{width:'500px' , height:'400px' , border:2 , borderColor:'lightgray'}}>\n                        \n                    </Box>\n                        <FileUploadIcon onClick={onUploadImageButtonClick} sx={{mx:3 , marginY:'auto' , border:1,borderRadius:\"50%\",color:\"#9D1CE5\" , p:2}} />\n                    <Box>\n                    <input style={{display:'none'}} type=\"file\" accept=\"image/*\" ref={inputRef} onChange={onUploadImage} />\n                    {/* <Button label=\"이미지 업로드\" onClick={onUploadImageButtonClick} /> */}\n                    </Box>\n\n\n                    <Box sx={{display:'flex' , flexDirection:'column' , alignItems:'start' , width:'50%' , border:0 , justifyContent:'end'}}>\n                        <Typography variant=\"body1\" sx={{fontWeight:'bold'}}>디자인 이름</Typography>\n                        <StyledTextField1 id=\"title\" value={title} onChange={onChange} sx={{width:'100%'}}/>\n                        <Typography variant=\"body1\" sx={{my:1 , fontWeight:'bold'}}>상품 설명</Typography>\n                        <StyledTextField2 id=\"content\" value={content} onChange={onChange} sx={{width:'100%'}} multiline rows={10}/>\n                    </Box> \n\n\n            </Box>\n            <Box sx={{width:'70%' , marginX:'auto' , display:'flex' , justifyContent:'right'}}>\n                <StyledButton sx={{mt:2 ,color:'inherit', backgroundColor:'inherit'}}> 상품 올리기 </StyledButton>\n            </Box>\n        </Box>\n    );\n}\n\nexport default DesignerUpload;","/Users/ian/Documents/GitHub/noriton-front/src/apis/apis.js",[],[],{"ruleId":"91","severity":1,"message":"92","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":12},{"ruleId":"91","severity":1,"message":"95","line":7,"column":8,"nodeType":"93","messageId":"94","endLine":7,"endColumn":12},{"ruleId":"91","severity":1,"message":"96","line":4,"column":23,"nodeType":"93","messageId":"94","endLine":4,"endColumn":28},{"ruleId":"91","severity":1,"message":"97","line":4,"column":30,"nodeType":"93","messageId":"94","endLine":4,"endColumn":36},{"ruleId":"91","severity":1,"message":"96","line":2,"column":16,"nodeType":"93","messageId":"94","endLine":2,"endColumn":21},{"ruleId":"91","severity":1,"message":"98","line":18,"column":7,"nodeType":"93","messageId":"94","endLine":18,"endColumn":11},{"ruleId":"91","severity":1,"message":"99","line":1,"column":10,"nodeType":"93","messageId":"94","endLine":1,"endColumn":15},{"ruleId":"91","severity":1,"message":"100","line":2,"column":18,"nodeType":"93","messageId":"94","endLine":2,"endColumn":23},{"ruleId":"101","severity":1,"message":"102","line":155,"column":9,"nodeType":"103","endLine":155,"endColumn":14,"suggestions":"104"},{"ruleId":"91","severity":1,"message":"105","line":4,"column":16,"nodeType":"93","messageId":"94","endLine":4,"endColumn":25},{"ruleId":"91","severity":1,"message":"106","line":86,"column":18,"nodeType":"93","messageId":"94","endLine":86,"endColumn":25},{"ruleId":"91","severity":1,"message":"107","line":158,"column":12,"nodeType":"93","messageId":"94","endLine":158,"endColumn":21},{"ruleId":"91","severity":1,"message":"108","line":158,"column":23,"nodeType":"93","messageId":"94","endLine":158,"endColumn":35},{"ruleId":"91","severity":1,"message":"109","line":9,"column":25,"nodeType":"93","messageId":"94","endLine":9,"endColumn":38},{"ruleId":"91","severity":1,"message":"110","line":4,"column":10,"nodeType":"93","messageId":"94","endLine":4,"endColumn":14},{"ruleId":"91","severity":1,"message":"111","line":67,"column":12,"nodeType":"93","messageId":"94","endLine":67,"endColumn":18},{"ruleId":"91","severity":1,"message":"112","line":67,"column":21,"nodeType":"93","messageId":"94","endLine":67,"endColumn":30},{"ruleId":"91","severity":1,"message":"113","line":1,"column":18,"nodeType":"93","messageId":"94","endLine":1,"endColumn":22},{"ruleId":"91","severity":1,"message":"114","line":71,"column":11,"nodeType":"93","messageId":"94","endLine":71,"endColumn":19},"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'List' is defined but never used.","'Paper' is defined but never used.","'Select' is defined but never used.","'Item' is assigned a value but never used.","'Label' is defined but never used.","'Input' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clothes.price'. Either include it or remove the dependency array.","ArrayExpression",["115"],"'useEffect' is defined but never used.","'setRows' is assigned a value but never used.","'popupName' is assigned a value but never used.","'setPopupName' is assigned a value but never used.","'setCategories' is assigned a value but never used.","'Link' is defined but never used.","'hearts' is assigned a value but never used.","'setHearts' is assigned a value but never used.","'Grid' is defined but never used.","'onSubmit' is assigned a value but never used.",{"desc":"116","fix":"117"},"Update the dependencies array to be: [clothes.price, num]",{"range":"118","text":"119"},[3664,3669],"[clothes.price, num]"]